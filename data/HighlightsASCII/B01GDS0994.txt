---
kindle-sync:
  bookId: '53360'
  title: SOFT SKILLS　ソフトウェア開発者の人生マニュアル
  author: ジョン・ソンメズ、長尾 高弘、まつもとゆきひろ
  asin: B01GDS0994
  lastAnnotatedDate: '2025-05-06'
  bookImageUrl: 'https://m.media-amazon.com/images/I/81In3b9m4LL._SY160.jpg'
  highlightsCount: 89
---
# SOFT SKILLS　ソフトウェア開発者の人生マニュアル
## Metadata
* Author: [ジョン・ソンメズ、長尾 高弘、まつもとゆきひろ](https://www.amazon.comundefined)
* ASIN: B01GDS0994
* Reference: https://www.amazon.com/dp/B01GDS0994
* [Kindle link](kindle://book?action=open&asin=B01GDS0994)

## Highlights
決して批判しない — location: [563](kindle://book?action=open&asin=B01GDS0994&location=563) ^ref-17040

---
私は、議論に打ち勝つことのできる方法はこの世界にたったひとつしかないという結論に達した。それは議論を避けることだ。ガラガラヘビや地震を避けるのと同じように、議論は避けよ。 デール・カーネギー『人を動かす』 — location: [595](kindle://book?action=open&asin=B01GDS0994&location=595) ^ref-9578

---
しかし、このような人がいつも接しなければならない上司や同僚だったらどうすればいいのだろうか。大したことではない。こういう連中のご機嫌を取らなければならなくなるか、新しい部門、あるいは新しい会社に移ることを考えるかだ。何をするにしても、彼らの罠に落ちないようにだけは気を付けよう。どうしても接しなければならない場合には、最小限の範囲で感情的にならないように付き合うことである。 — location: [613](kindle://book?action=open&asin=B01GDS0994&location=613) ^ref-13596

---
大企業では、人の視界から外れるのは非常に簡単である。私は複数の大企業で働いたが、一日じゅう何もしない開発者がいた。全社規模で大きなレイオフが行われるまで、誰も彼らの存在に気づかなかった。しかし、この種の自立性には、活用方法がある。ものを作らなければならないというプレッシャーのないところで重要だとか面白いと思っているプロジェクトに携われることがあるのはいい点だ。 — location: [1026](kindle://book?action=open&asin=B01GDS0994&location=1026) ^ref-10600

---
大企業については、最後にひとこと触れておかなければならないことがある。政治だ。大企業には、大きな政府に匹敵するほどの複雑な政治システムがあることが多い。大企業のソフトウェア開発者として、政治を避けようとすることはできる。しかし、あなたがそうしたとしても、ほかの人々の政治的操作は何らかの形で必ずあなたに降りかかってくるだろう。そして、次の章で述べるように、大企業の出世階段を上るには、会社のなかの複雑な政治的環境を泳ぎ渡る方法を学ばなければならないはずだ。政治的な動きが苦手で完全に避けたいと思っているなら、フラットな管理構造を持つ小企業を探すといい。 — location: [1030](kindle://book?action=open&asin=B01GDS0994&location=1030) ^ref-51911

---
具体的には、社内ソフトウェア開発や一部製品のためにソフトウェア開発者を雇っている会社と、ソフトウェア製品を開発するなど主要な事業としてソフトウェア開発を行っている会社の差異である。 — location: [1040](kindle://book?action=open&asin=B01GDS0994&location=1040) ^ref-26529

---
これら2種類の会社の違いは、アジャイルソフトウェア開発メソドロジーの扱いを見ると明確にわかる。アジャイルプロセスは開発チーム主導で進められるため、ソフトウェア開発を事業の柱としていない会社で取り入れるのはかなり難しい。アジャイルプロセスはトップダウンで採用することが必要なので、一部の開発者がアジャイルの考え方はいいと思っても、会社全体のやり方を変えるのは難しいことが多い。 — location: [1050](kindle://book?action=open&asin=B01GDS0994&location=1050) ^ref-42685

---
収入はいつでも責任に追いついてくる。それまでよりも重い責任を引き受けるように求められたときには、それを受けるべきだ。 — location: [1074](kindle://book?action=open&asin=B01GDS0994&location=1074) ^ref-55367

---
ビジネスには、誰からも無視されているものの、あなたの能力を活かせるような場所が必ずある。ただ、あちこちを探ってみて、そのような場所を見つけるだけのことだ。 — location: [1078](kindle://book?action=open&asin=B01GDS0994&location=1078) ^ref-42514

---
探してみるといいのは、ほかの人が誰も関わりたがらないようなところだ。おそらく、誰も触りたくないと思っている古いアプリケーションや、コードベースのなかでも特に汚いことで知られるモジュールなどである。これらは、誰もほしがらず、競って手に入れる必要もないので、あなたの広がりつつある帝国の新たな領土にできる。このような不毛の沼地を肥沃な大地に変えられれば、あなたは周囲に自分の真価を示すことができるのだ。 — location: [1080](kindle://book?action=open&asin=B01GDS0994&location=1080) ^ref-34669

---
間接的に責任を引き受ける方法としては、チーム内のほかのメンバーのメンターになるというものもある。新人が仕事のスピードについていけるようにするためのボランティアだ。支援を必要とする人には必ず声を掛けよう。自分の問題以外にも他人の問題を知って解決すると、自分がより多く学べるだけでなく、時間とともにチーム内であなたは頼れる人だという評判が生まれる。このような評判が生まれると、あなたにはチームリーダーやマネージャーのポストが回ってくるはずだ。 — location: [1084](kindle://book?action=open&asin=B01GDS0994&location=1084) ^ref-14577

---
・みんなに無視されているものの、自分なら管理できるというプロジェクトを引き受けること。 ・チームの新メンバーが仕事のペースについていけるように支援すること。 ・プロセスのドキュメントを書き、そのドキュメントをメンテナンスし続けていくこと。 ・ほかに誰もやりたがらないものの、自分が引き受ければ楽にしたり自動化したりできるものを探すこと。 — location: [1089](kindle://book?action=open&asin=B01GDS0994&location=1089) ^ref-39829

---
誰もあなたのことを知らず、あなたが達成してきたことを知らないのなら、あなたがチームでもっとも頭がよく、もっともよく働き、もっとも優れた開発者でも意味がない。上司、あるいはもっと偉い人にあなたがしていることを知らせる方法がなければ、あなたのハードワークも無駄になってしまう。 — location: [1094](kindle://book?action=open&asin=B01GDS0994&location=1094) ^ref-41757

---
新しい会社に入るたびに私がまずしていたのは、何に時間を費やし、その日に何を達成したかを日録に書くことだ。その内容をもとに、毎週金曜日に週間サマリーを書いて上司に送ったのである。私はこれを自分の「週報」と呼んでいた。そして、新しい職場で最初の週報を送るときには、直接の上司が何をしているのかを理解することがいかに重要かを自分は認識しており、だからこそ上司の仕事が楽になるように、自分の仕事の週間サマリーを送っていることが伝わるような内容を書き添えていた。 — location: [1097](kindle://book?action=open&asin=B01GDS0994&location=1097) ^ref-37129

---
たとえば、何らかのテーマやチームが直面している問題について発表をしたいと申し出ることなどは特に効果的だ。説明できるテーマを選び、それをチームに説明したいと言うのである。就業時間ではなく昼休みにランチタイム学習会として、教育的なテーマの発表をしたいと言えば、なおいい。知名度を上げ、特定の分野でいかに豊富な知識を持っているかをうまく示すことができる。さらに、ほかの人々の前で発表しなければならないことをただ知るだけではなく否応なく学習するチャンスを作る方法としても、これ以上のものはない。私の場合、もっともよく学べたのは、このようなプレッシャーのもとで学んだときだ。 — location: [1110](kindle://book?action=open&asin=B01GDS0994&location=1110) ^ref-32039

---
・毎日の仕事の内容の記録を残し、それをまとめた週報を上司に送る。 ・発表や訓練の講師をすると申し出る。チームにとって役立ちそうなテーマを選ぶ。 ・声を上げる。会議などのチャンスがあるときに行おう。 ・見られる。上司との定期的なミーティングを設定する。頻繁に見られるように心がける。 — location: [1116](kindle://book?action=open&asin=B01GDS0994&location=1116) ^ref-51409

---
また、ソフトウェア開発のこと以外にも勉強をしよう。上のレベル — location: [1134](kindle://book?action=open&asin=B01GDS0994&location=1134) ^ref-32378

---
が視野に入り、経営陣に入る可能性が見えてきたら、時間を割いてリーダーシップや経営、マネジメントについても学ぶべきだ。 　そして、学習しているという事実を知ってもらうことを忘れてはならない。すでに、自分の知識をシェアするために発表することについては触れたが、自分のブログを開設したり、雑誌記事や書籍を執筆したり、コミュニティのイベントやカンファレンスで講演したりすることもできる。社外に出て活動をすると、自分の専門分野における権威として自らの地位を確立し、所属する会社に自分の価値を高く見せるために役立つ。 — location: [1134](kindle://book?action=open&asin=B01GDS0994&location=1134) ^ref-36388

---
どの会社でも、なぜこのアイデアではうまくいかないのかとか、この問題は難しすぎると言ってくる人がたくさんいる。このような人はありふれた人であり、その一人になってはいけない。問題に対する答えをいつでも出せる人、その答えを実行して結果を出せる人になろう。 　どの会社でも、もっとも役に立つタイプの人とは、乗り越えられない障害は決してないのではないかと思えるような人である。 — location: [1141](kindle://book?action=open&asin=B01GDS0994&location=1141) ^ref-14294

---
ほとんどの会社は何らかの形で昇進昇格のチャンスを提供するものだが、この章のすべてのアドバイスに従っても、何らかの理由でいかなるチャンスも与えられない場合があるかもしれない。そのような場合はどうすればいいだろう。 　辞めることだ。まず、新しい就職先を確保しておこう。しかし、自分が行き止まりのポストに押し込まれていることに気づき、もっとまともなチャンスを探さなければならない場合もある。作業環境がピリピリしていて精神衛生上よくないとか、縁故が強くて昇進のチャンスはないといった場合だ。理由が何であれ、そのようなところからは脱出する必要がある。 — location: [1148](kindle://book?action=open&asin=B01GDS0994&location=1148) ^ref-45840

---
政治にまったく触れずに昇進昇格についての章を終わらせることはできないだろう。しかし、私はキャリア向上のために注目すべきことのなかでは、政治はもっとも重要性が低いと思っている。そのため、この問題に触れるのは最後にした。私は決して甘っちょろいわけではない。ほとんどの企業に社内政治がうごめいていることはわかっているし、あなたもそのことは意識しなければならない。しかし、政治ゲームにあまり時間をかけ過ぎるべきではないと思う。 — location: [1156](kindle://book?action=open&asin=B01GDS0994&location=1156) ^ref-63787

---
確かに、巧妙な戦術を駆使し、野心をむき出しにすれば、社内の出世階段を上ることはできるが、そのような形で昇進昇格しても、同じくらい簡単に転げ落ちる危険がある。そんなことはないと言う人もいるだろうが、価値のある社員に見せるのではなく、本当に価値のある社員になってしっかりとした基礎を築く方がいい結果を残せることを私は見てきた。 — location: [1160](kindle://book?action=open&asin=B01GDS0994&location=1160) ^ref-41422

---
やりとげる力』（筑摩書房、2008年※1）でスティーブン・プレスフィールドは、プロであることとアマチュアであることの違いを次のように説いている。 — location: [1173](kindle://book?action=open&asin=B01GDS0994&location=1173) ^ref-51293

---
プロになって変わるのはマインドセットだ。恐怖、自虐、先送り、自己不信などと闘っているときの問題は、アマチュアのような考え方をしていることにある。アマチュアは目立たない。アマチュアは休む。アマチュアは逆境に弱い。プロはそれとは異なる考え方をする。プロは、何があっても自分の姿を見せ、仕事を進め、前進し続ける。 — location: [1176](kindle://book?action=open&asin=B01GDS0994&location=1176) ^ref-55894

---
プロとアマチュアの違いを大まかにまとめると、 表10.1 のようになるだろう。 — location: [1203](kindle://book?action=open&asin=B01GDS0994&location=1203) ^ref-22147

---
それは習慣から始まる。私たちが毎日行っていることの大部分は習慣的なもので、習慣はプロになるための重要な要素である。私たちは、起きて、働いて、毎日のルーチン作業をこなす。そのとき、ルーチン作業については、ほとんど何も考えていない。人生を変えたければ、この習慣を変えるところから始める必要がある。もちろん、それは言うは易く行うは難しだ。悪い習慣を打ち破るのはきわめて難しいことであり、新しい習慣は簡単に身に付かない。 　しかし、プロになりたければ、プロの習慣を身に付ける必要がある。以前、スクラムプロセスに従うチームで働いていたことがあった。スクラムでは、毎日朝礼を行い、自分たちが行ったこと、自分たちがやろうと計画していること、自分たちの障害になっていることを言うことになっており、自分が言う予定の内容をいつもきっちり書いて持ってくる開発者がいた。私たちの大半は、ミーティングの間に発言内容を準備するが、彼は毎日欠かさずスクラムミーティングが始まる前に発言内容を準備してくるのである。プロが身に付ける習慣とは、たとえばこういうものだ。 — location: [1207](kindle://book?action=open&asin=B01GDS0994&location=1207) ^ref-60017

---
あらかじめ1日のプランをしっかりと練って時間を効果的に管理する習慣を身に付けよう。プロは、毎日どのような仕事をしなければならないか、その仕事をするためにかかるおおよその時間がどれくらいかを把握しているものだ。 — location: [1219](kindle://book?action=open&asin=B01GDS0994&location=1219) ^ref-20525

---
ボブ・マーティンはさらに続ける。プロフェッショナルには、絶対に越えない一線があるので、たとえ上司が相手でも言うべきときには「ノー」と言わなければならない。たとえそれでクビになったとしても、自分をプロと呼ぶためにはそのような代償を払わなければならないことがある。それは苦しいことかもしれないが、キャリアを通じて自分が正しいと思っていることを一貫して選んだ方が、そうでないよりも報われる可能性が高い。そして、夜よく眠れる。 — location: [1241](kindle://book?action=open&asin=B01GDS0994&location=1241) ^ref-61687

---
プロは、どの仕事をするかという優先順位に関して辛い選択をしなければならないことがある。プロでない開発者は、次にすべき仕事を決められないか、いつもほかの人に優先順位を決めてもらっているので、つい目先の仕事をして時間を無駄にしてしまうことが多い。プロなら、自分がすべき仕事を評価し、優先順位を付けて仕事に取り掛かるところだ。 — location: [1245](kindle://book?action=open&asin=B01GDS0994&location=1245) ^ref-33803

---
私が椅子に深々と座って、「時にはノーと言わなきゃダメだよ」などと伝えるのはお気楽なものだが、すべての人に自分のポストをリスクに晒しても平気だという贅沢があるわけではないだろう。あなたの未来が破壊的なダメージを受ける恐れから文字通り「ノー」とは言えない状況があり得ることは、この私も理解している。 　そのような場合は、悪い状況を切り抜けるために必要なことをやり遂げた後、もう二度とそのような状況に入り込まないように注意するしかないだろう。どうしても勤め先が必要ですぐには辞められないという状況には簡単に追い込まれてしまうものだが、そのままでいると自分の選択肢が限られてしまい、ほかの人に巨大な力で抑え込まれてしまうのだ。 　そのような状況にいる場合には、できる限り早く抜け出せるように努力しよう。蓄えを作って、職を失ってもそれほど心配な状態にならないようにすべきだ。このように倫理的な判断を下さなければならないことがたびたびはない会社、あるいはあなたの意見がもっと高く評価される会社に移った方がいいかもしれない。 — location: [1250](kindle://book?action=open&asin=B01GDS0994&location=1250) ^ref-9655

---
あなたはプロとして、自分が作るコードの品質を向上させるために絶えず努力していなければならない。いつも自分が望むような高品質のコードを作れるわけではないだろうが、時間とともに、自分の基準に達するコードを安定して作れるようになるだろう。しかし、多くのソフトウェア開発者は、品質が基準に達しないときに、自分を高めてその厳しい基準をクリアする方向に努力するのではなく、基準を引き下げるという大きな過ちを犯してしまう。 — location: [1262](kindle://book?action=open&asin=B01GDS0994&location=1262) ^ref-60696

---
プロが高い基準を満たすために行っているのは、継続的な自己研鑚である。プロになりたければ、いつも全力を挙げて自分のスキルを向上させ、自分の技術についてより多くのことを学ばなければならない。スキルを広げるための自己訓練プランを立て、仕事の質を高めるために役立つ新しい情報を学ぶようにしよう。十分いいという線で満足してはならない。常にもっといい自分を求め続けよう。 — location: [1275](kindle://book?action=open&asin=B01GDS0994&location=1275) ^ref-36699

---
いつか昼間の仕事を辞めて自分のために働くというのが私の長年の夢だった。企業社会で働くのは、囚われの身になっている感じだった。会社から出て独立すれば、ずっとよくなることはわかっていた。問題は、「どうやって」辞めるかだ。 — location: [1292](kindle://book?action=open&asin=B01GDS0994&location=1292) ^ref-55004

---
ここでは本当に正直に話をしよう。私は、在籍したほとんどの会社で優秀な社員だったが、自分が本来ならできる仕事の半分くらいしか力を出していなかった。 　自分の会社を始めて自分の時間をトラッキングしてみるまで、そんなことはわからなかった。初めて独立したときには、8時間労働と比べて恐ろしく大変になるとはとても思えなかった。毎週、会社の仕事のためには1日8～10時間を使っていた。独立したからといって、座って8時間働くのが突然大変になったりするものだろうか。そして同じ時間に8時間分の仕事ができなくなる理由などあるだろうか。 　この問いに対する答えは、自分の時間を丁寧に計測することによって明らかになった。私は仕事中の自分の時間をチェックし、記録するメカニズムを準備し、自分の時間が何に使われているのかがわかるようにした。そして、これをやってみると、実際には日中に4時間前後しか仕事ができていないことがわかった。誰かにそう言われても信じられなかっただろう。今でも嘘のような気がしてならないのだが、数値は嘘をつかない。独立してからは、以前よりも一所懸命働いていたが、毎日自分が発揮できる能力の半分の仕事しかできていなかったのである。 — location: [1354](kindle://book?action=open&asin=B01GDS0994&location=1354) ^ref-54681

---
最後に、ごく普通のさぼりと呼んでいるもののために1時間を取り除く。私たちはみなしょっちゅう仕事をさぼりながら、Facebookのメッセージをチェックしたり、個人的なメールに返事をしたりしている。それを否定することはできない。それを足し合わせると毎日1時間くらいになるだろう。 — location: [1372](kindle://book?action=open&asin=B01GDS0994&location=1372) ^ref-6986

---
ここからわかったのは、会社員だったときの典型的な出勤日には、本気で一所懸命やった生産的な仕事2時間分のことしかしていなかったことだ。 　ここで言いたいことはふたつある。まず第1に、自分のために働くときには、他人のために働くときよりも、たとえ厳密に同じ時間働いたとしても、かなり一所懸命働くことになるので、そのために準備をして、重い負荷に慣れておく必要がある。自分のための仕事は、それに対する情熱とともにモチベーションを高く保てるかもしれないが、その情熱がいつまでも続くことを計算に入れてはならない。情熱は、時間とともに失せていくものだし、変わりやすいものでもある（このテーマについては、カル・ニューポートの『優秀になれば無視できなくなる』（未訳）：Cal Newport, “So Good They Can’t Ignore You,” Business Plus 2012を読むといい）。 — location: [1382](kindle://book?action=open&asin=B01GDS0994&location=1382) ^ref-51814

---
あなたが自分の製品で同様の成功を収めたいなら（規模としてはとても同じようにはならないだろうが）、まずブログを成功させ、ポッドキャストや講演、ビデオなどのメディアも使って、自分の取り巻きを作ることだ。取り巻きを築いたら、その人たちに製品を売ることができる。この本だって、すでに私のブログのフォロワーだから買ったとか、私のほかの仕事をフォローしていてこの本を知ったとか、ポッドキャストで私のことを耳にしたといった理由で買っている人がいるだろう。これが、自分のオーディエンスを築いたときに得られるパワーだ。 — location: [1641](kindle://book?action=open&asin=B01GDS0994&location=1641) ^ref-45779

---
単純に会社を辞めてアントレプレナーの可能性を追求してはならないことは今まで繰り返し伝えてきたが、ここでも同じことを言おう。小さく始めよう。最初の製品のために壮大過ぎる目標を立てて、その新しい夢を追いかけるためにその他すべてを置き去りにするアントレプレナーの卵があまりにも多すぎる。 — location: [1671](kindle://book?action=open&asin=B01GDS0994&location=1671) ^ref-21994

---
このテーマについて言うべきことは、「在宅から外れてしまう」ということだけだ。規律や自己管理で苦労しているなら、在宅勤務をすることはおそらく考え直した方がいい。内発的モチベーションは、時間管理に次いで大きな在宅勤務「キラー」だろう。内発的モチベーションは時間管理と密接な関連を持っているが、自分の時間を効果的に管理できたとしても、遅かれ早かれ仕事なんか一切したくない気分になるだろ — location: [1845](kindle://book?action=open&asin=B01GDS0994&location=1845) ^ref-13977

---
テクノロジーに対して 頑なな態度を取るな — location: [2082](kindle://book?action=open&asin=B01GDS0994&location=2082) ^ref-50019

---
みなテクノロジーに対して宗教的になっている 　これは嘘ではない。あなたも認めるかもしれない。あなたは、自分が最良だと思っている何らかのテクノロジーやプログラミング言語をひいきにしている。少なくとも、ほとんどのプログラマーはそうだ。これはごく自然なことである。私たちは、自分がしていることに対して熱狂的になるものだ。そして、熱狂と情熱があるときには、かなりヒートアップした意見が出てくる。プロスポーツをちょっと見ればわかる。 — location: [2094](kindle://book?action=open&asin=B01GDS0994&location=2094) ^ref-12693

---
私たちの大半は、ただ知っているからという理由で特定のテクノロジーを崇める態度を取るようになってしまう。これは問題だ。自分が選んだものは、可能な限りで最良の選択だと考えたくなるのは自然の勢いであり、逆のことを言われると侮辱されたような気分になりがちなのだ。何が最良かについて、十分に情報を得た上で最良の判断を下せるほど、世に出ているすべてのテクノロジーを十分に知り尽くすことはおそらくできない。そこで、私たちは自分が知っているものを選び、それが一番いいんだと思い込む。人生は難し過ぎてそれ以外の生き方は選べないものだ。 — location: [2099](kindle://book?action=open&asin=B01GDS0994&location=2099) ^ref-15917

---
私も、オペレーティングシステムやプログラミング言語、さらにはテキストエディタなどにまで宗教的な態度を取って、キャリアのかなりの部分を費やしてしまった。今はより良いものがあることも知っている。最良だと思うのテクノロジーをひとつ選び、ほかのものはそれよりも劣っていると考える必要はないのである。 — location: [2108](kindle://book?action=open&asin=B01GDS0994&location=2108) ^ref-18916

---
すべてのテクノロジーが偉大だというわけではないが、広く普及しているテクノロジーの大半は、少なくとも「いい」。少なくともいいと言えるものでなければ、成功して広く知られたり使われたりするようになるのは難しい。もちろん、時間とともに状況は変わっていく。しかし、少なくとも歴史上のある時点では、ほぼすべてのテクノロジーがいいものだったし、場合によっては偉大だとまで考えられていたということを認識することが大切だ。 　このような視点をつかむと、多くの場合、ある問題に対してひとつ — location: [2112](kindle://book?action=open&asin=B01GDS0994&location=2112) ^ref-11651

---
の、あるいは最良のソリューションがあるわけではないことを理解できるようになる。たったひとつのベストなプログラミング言語、フレームワーク、オペレーティングシステムがあるわけではない。もちろん、テキストエディタも……そうだ。あなたはほかのものよりも特定のテクノロジーが気に入っているかもしれないし、ほかのプログラミング言語ではなく、ある特定のプログラミング言語を使っているときの方が生産的かもしれないが、だからといってそれが最良だというわけではない。 — location: [2117](kindle://book?action=open&asin=B01GDS0994&location=2117) ^ref-29736

---
選択肢を制限するな 　本当に言いたいのは、選択肢を制限するなということだ。自分が選んだテクノロジーが最高だと強調して、ほかのすべてのテクノロジーを無視したり過小評価したりするのは間違っている。その視点にしがみついていると、結局は自分を傷つけることになる。 — location: [2144](kindle://book?action=open&asin=B01GDS0994&location=2144) ^ref-948

---
ナイトクラブに出掛けてカバーバンドの演奏を聞いていて、オリジナルのアーティストより上手とまではいかなくても、同じくらいにうまいと思ったことはないだろうか。カバーバンドは小さなナイトクラブでこじんまりと演奏しているのに、それよりも才能があるとは思えないもう一方のバンドはワールドツアーに出かけてプラチナディスクを得ている。この違いはなぜなのだろうと思ったことはないだろうか。 　明らかにどちらのバンドにも才能はある。ただ、才能だけでは、人生にそれだけの差がついてしまう。偉大なミュージシャンとスーパースターの本当の違いは、マーケティングに過ぎない。マーケティングは才能を数倍にする。マーケティングがよければよいほど、才能に掛けられる数値は大きくなる。ソフトウェア開発者であるあなたが、この重要なスキルをぜひとも学ばなければならないのはそのためだ。 — location: [2174](kindle://book?action=open&asin=B01GDS0994&location=2174) ^ref-35801

---
あなたが自分のことをエキスパートだと考えていないからといって、自分のマーケティングを始められないわけではない。ほとんどすべての開発者は、何かしら人に提供できるものを持っている。ユニークな視点を持っているとか、ほかのソフトウェア開発者とは異なる経験を積んでいるとかがそうだ。ビギナーであったり、アマチュアであったりしても、それをうまくマーケティングすれば、有利な要因にできる。自分よりもほんの数歩先を歩いているだけの人からものを学びたいと思う人はたくさんいる。そういう相手なら共感を持てるからだ。 　ポイントは、エキスパートではないことを、自分のマーケティングができていない言い訳にしてはならないということだ。キャリアのどの段階にいても、自分のブランドを形成・管理して広めることにより利益が得られるのである。 — location: [2225](kindle://book?action=open&asin=B01GDS0994&location=2225) ^ref-25347

---
http://www.smartpassiveincome.com/）の戦略である「Be everywhere」を採用している。その基本的な考え方は、「自分をマーケティングしたい場所にはどこでも現れる」というものだ。あなたがこの戦略を採用すれば、顧客候補が周辺を見回すと、高い確率であなたが見えるわけだ。具体的には、顧客候補のTwitterフィードに顔を出し、登録しているポッドキャストで話をし、オンラインであなたのビデオを見てもらう。顧客候補がどこを見ても、あなたとばったり出会うようになっている。このように自分をマーケティングするための方法を 表19.1 にまとめておこう。 — location: [2248](kindle://book?action=open&asin=B01GDS0994&location=2248) ^ref-13964

---
スターバックスのブランドは一見、あのよく知られているロゴのことのように思えるかもしれないが、それは全然違う。スターバックスのロゴは、ブランドを思い出させるビジュアルな鍵であり、ブランドそのものではない。 　スターバックスに入って行くとき、何を見聞きすることを期待しているだろうか。ライティングは？　内部のレイアウトや調度品は？　おそらくあなたは今、目をつぶってスターバックスの店内がどのようなイメージか想像しているだろう。どんな感じだろうか。 　カウンターに行ってドリンクをオーダーするときにはどんな感じだろうか。バリスタはどんな様子だろう。バリスタはあなたにどのように近づいてきて、どのように尋ねるだろうか。あなたはメニューをよく知っているだろうか。値段がどれくらいで、飲み物の品質レベルがどれくらいかもわかるだろうか。 　このように、ブランドはロゴ以上のものである。ブランドは、製品やサービスについて思い浮かぶ一連の期待感だ。ロゴは単にブランドをビジュアルに思い出させるだけである。ブランドの中心は、視覚要素ではなく、ブランドが何を感じさせるか、ブランドと向かい合ったときに何を予想するかだ。ブランドは約束である。あなたが思う通りの形でイメージされた何らかの価値が届けられるという約束だ。 — location: [2278](kindle://book?action=open&asin=B01GDS0994&location=2278) ^ref-51137

---
ブランドを持つためには、メッセージ、ビジュアル、一貫性、反復的な接触の四つが必要だ。いいブランドを作るためには、これら四つの要素はどれも不可欠である。これらのコンセプトから自分のパーソナルブランドを作るにはどうすればいいかを理解するために、四つの要素をひとつずつ見ていこう。 　まず、もっとも大切なメッセージだ。メッセージのないブランドは、目的がない。メッセージは、ブランドによって運ぼうとしているものであり、ブランドとして呼び起こしたい感覚である。自分のパーソナルブランドを作るときには、あなたのブランドを表現する中心的なメッセージが必要だ。あなたのブランドは何についてのものか。あなたはどういう人なのか。たとえば、私の「シンプルプログラマー」というブランドは、複雑なものを単純にするというメッセージを基礎と — location: [2291](kindle://book?action=open&asin=B01GDS0994&location=2291) ^ref-3750

---
している。私のメッセージは、「私なら複雑なコンセプトを分解し、単純にして、誰もが理解できるようにする」というものである。 　第2に、ビジュアルが必要だ。ビジュアルはブランドそのものではないが、ブランドにとって重要である。当然ながら、ブランドにはロゴが必要だ。ロゴはブランドのシンプルな視覚表現であり、優れたブランドは可能な限りあらゆるところでビジュアルを使う。ブランドを表現する色とスタイルは、ブランドを認識可能にして、ブランドが表現するメッセージを広める。 　あなたのブランドが自分の名前そのものでも、そこからロゴを作ることはできる。そのいいお手本を示してくれているのが、私の友人のジョン・パパだ。ウェブページ（http://johnpapa.net）にある彼のブログに行くと、彼の名前から作ったロゴを見ることができる。 　次は一貫性である。優れたメッセージと優れたビジュアルがあっても、一貫性がなければ、ブランドに対する予想、期待は生まれない。悪くすると、予想を絶えず裏切ることになる。マクドナルドに行ったのに、店ごとにメニューも値段もまちまちだったらどう思うだろうか。エクスペリエンスが絶えず変化し、そこに一貫性というものがなければ、ブランドは無意味になり始める。 — location: [2299](kindle://book?action=open&asin=B01GDS0994&location=2299) ^ref-48221

---
ブランドの最後の要素は、反復的な接触だ。ほかのことを正しくできたとしても、ブランドに接したのが1度だけの人にあなたは何か効果のあることをできただろうか。ブランドのポイントは、一連の予想されるイメージを確立して、誰かがあなたのロゴやあなたの名前にもう1度接したときに、「あなたが誰で、何を表現しているか」をすぐに思い出してもらうことにある。 　メッセージを広めてあなたの名前を知ってもらうためには、できる限り積極的に働きかけていく必要がある。そのためにブログを開設し、記事を書き、講演し、ビデオを作り、ポッドキャストを放送し、その他のメディアを使って自分の名前を広めるのである。ブランドを強く押し出し、人々に触れる機会を増やせば、ブランドを覚え、あなたが誰かを覚えてくれる人も増えるだろう。 — location: [2313](kindle://book?action=open&asin=B01GDS0994&location=2313) ^ref-61144

---
独自ブランドを作ることに決めたら、最初にしなければならないのはメッセージの定義だ。 — location: [2321](kindle://book?action=open&asin=B01GDS0994&location=2321) ^ref-3801

---
自分のニッチが見つかったら、メッセージに取り掛かろう。ひとつかふたつの文で自分のブランドを表現するキャッチフレーズから始めるべきだ。たとえば、私のキャッチフレーズは「複雑なものを単純に」である。このキャッチフレーズを読んだ人は、私がどういう人間なのかすぐにわかるだろう。 — location: [2339](kindle://book?action=open&asin=B01GDS0994&location=2339) ^ref-961

---
エレベーターピッチを作る。エレベーターピッチとは、あなたが何をする人でどういう人かということをエレベーターに乗っている間に言い終えられるくらいの簡潔な説明である。ディナーパーティーや本当にエレベーターに乗っているときに、誰かが「あなたは何をしているのですか」と尋ねてきたときに答える内容だと考えるといいだろう。 — location: [2342](kindle://book?action=open&asin=B01GDS0994&location=2342) ^ref-48781

---
エレベーターピッチを作るときには、あなたが提供する価値は本当のところ何なのかをよく考えよう。ユニークな形であなたを定義するものは何か。ほかの人はあなたに何を期待できるのか。エレベーターピッチのなかでは、あなたが何をしていてどのようなユニークな価値を与えてくれるのかを明確に伝えるようにしたい。 — location: [2345](kindle://book?action=open&asin=B01GDS0994&location=2345) ^ref-56331

---
ブログによって得られる金銭的なメリットをかなり割り引いたとしても、コミュニケーションスキルの向上というお金にならない効果は、簡単には無視できない。自分の考えをまとめて言葉に置き換えるのは、難しいけれども価値のあるスキルだ。定期的に文章を書いていると、そのスキルを磨くために役立つ。そして、コミュニケーターとしての力が上がると、人生の様々な分野で役に立つ。さらに、定期的にブログを書くことを自分に課すると、コンスタントにスキルに磨きをかけることが義務付けられることになり、自分の専門領域の知識を最新状態に保つことができる。 　ソフトウェア開発者として文章の書き方を学ぶと、自分の意図を伝えやすくなるので、より良いコードを書くためにも役立つ。自分のアイデアを伝えるためにも、そして、それがより重要なものに見えるようにするためにも役立つのである。 — location: [2408](kindle://book?action=open&asin=B01GDS0994&location=2408) ^ref-17170

---
あなたがブロガーとして成功するかどうかは、基本的にあるひとつのことによって大きく左右される。それがすべてといってもいい。それは、着実性である。私は、成功を収めた多くのブロガーと話をしてきたが、彼らは全員あるひとつのことで共通していた。それは、たくさん書くことだ。もっとも大きく成功を収めているブロガーのなかには、毎日書くことを何年も続けている人がいる。 — location: [2460](kindle://book?action=open&asin=B01GDS0994&location=2460) ^ref-45268

---
心配する必要はない。毎日ブログポストを書く必要はない（最初の1年くらいは、週に2、3件のポストを書いても苦にならないが）。何よりも大切なのは、規則的なスケジュールを選び、それに従うことだ。ブログをどれくらい早く成功させられるかは、頻度によって決まる。少なくとも週に1度の頻度でブログを書くことを強くお勧めする。その頻度だと、年に52個の投稿を追加していくことになる。これがきわめて重要だというのは、先ほども触れたように、あなたのブログへのトラフィックのかなりの部分（おそらく大部分）がGoogleなどのサーチエンジンから導かれてくるからだ。ブログへの投稿が多ければ多いほど、インターネットリサーチからのトラフィックは増える（もちろん、投稿が実際にまともなもので、単なる単語の羅列でなければの話である）。 — location: [2464](kindle://book?action=open&asin=B01GDS0994&location=2464) ^ref-50539

---
着実に書き続けることと、質の高いコンテンツを書くことのふたつをしていれば、ブログはたぶん成功する。なぜそんなことがわかるのか？　私はしょっちゅうソフトウェア開発者に話をしているが、自分のブログを持っていて毎週更新している人に手を上げてもらうと、100人の聴衆者がいる場合でも、片手で足りる数の挙手しかない。いいコンテンツを着実に書くだけで、あなたは簡単に開発者の上位1%に入ることができる。少なくとも、自分のマーケティングということでは上位だ。 — location: [2488](kindle://book?action=open&asin=B01GDS0994&location=2488) ^ref-18780

---
多くのブロガー候補たちがとうとうブログを始めなかったり、始めてもすぐに止めてしまったりするのは、何を書いたらいいのかわからないか、あるいは言いたいことが何もないことに気づいたからだ。 　この問題と戦うためには、あらかじめ様々なアイデアをブレインストーミングし、ブログのテーマとして書けることのリストを作っておいて、いつもテーマのプールを用意しておくのが一番である。 — location: [2494](kindle://book?action=open&asin=B01GDS0994&location=2494) ^ref-48251

---
自分がしていることの90%はただで分け与えよ 　私が無料で開放しているコンテンツの量を見たら、たじろぐ人がいるかもしれない。私は毎週3個のブログポスト、1本のYouTubeビデオ、2本のポッドキャスト、その他のコンテンツを作っているが、それらはすべて無料である。私は、自分が作ったコンテンツの90%は無料にすべきだと固く信じている。ハードワークに対して料金を徴収するのは決して間違っていないが、しっかりとした価値を主として無料で人々に分け与えるときに、もっとも大きな成功が得 — location: [2577](kindle://book?action=open&asin=B01GDS0994&location=2577) ^ref-65343

---
人とつながり自分をマーケティングするためにもっとも効果的な方法のひとつは、講演を行ったり、何らかの形で教育訓練をする立場になったりすることだ。講演は、ほかのメディアとは異なり、スケーラビリティこそないが、潜在顧客となる聴衆の前に立ち、直接語りかけることは、あなたができることのなかでももっともインパクトが強いことだと言えるだろう。 — location: [2721](kindle://book?action=open&asin=B01GDS0994&location=2721) ^ref-37705

---
全然問題ない。多くの人がそうだ。人前で話すのが怖いというのは、もっとも一般的な恐怖症のひとつである。しかし、この恐怖症にどうすれば対処できるだろうか。心地いい環境のもとで、人前で話すのが怖くなくなるように練習できるトーストマスターズ（http://www.toastmasters.org/）のような組織もある。会議で立ち上がって話すとか、よく知っている少数の人々を相手にプレゼンテーションをするといった非常に小さなことから始めることもできる。話すのが苦痛でなくなってきたら、もっと度胸のいるイベントに進めばいい。 — location: [2786](kindle://book?action=open&asin=B01GDS0994&location=2786) ^ref-6316

---
執筆で成功したければ、オーディエンスとの間で気持ちが通じなければならない。読者がこの部分を読んでいてくれたらいいのだが、実は、私が今していることがまさにそれだ──あなたとの間で。この章はもっと違った形で始めてもよかったが、あなたに直接話しかけることを通じて、もっと強い気持ちのつながりを作りたかったので、こういう形にしたのである。 — location: [2834](kindle://book?action=open&asin=B01GDS0994&location=2834) ^ref-1614

---
書籍、雑誌は利益にはならない 　本や雑誌に書いている人たちは原稿を書いて多額の収入を得ているに違いないと多くのソフトウェア開発者が思い込んでおり、それでは本を書く理由を勘違いしてしまう。実際には、本を収入のために書くわけではない。本を書くのは、自分の評価を高めるためだ。 — location: [2858](kindle://book?action=open&asin=B01GDS0994&location=2858) ^ref-49855

---
しかし、直接報酬が得られないからといって、出版が利益にならないというわけではない。すでに述べたように、本や雑誌記事を執筆することによる本当のメリットは、広く流通し、書いたものが出版されたということで信用が得られることだ。出版業界は、品質の門番のような役割を果たしている。その門番を突破して反対側まで行ければ、出版されたことによって間接的に与えられるあらゆる富のチャンスが転がっている。 — location: [2865](kindle://book?action=open&asin=B01GDS0994&location=2865) ^ref-54235

---
自分のマーケティングを本当に成功させたいと思うなら、私たちの大半が持っている大きな恐怖を克服しなければならない。それはバカみたいに見えることに対する恐怖だ。 — location: [2921](kindle://book?action=open&asin=B01GDS0994&location=2921) ^ref-5036

---
要するに、物事は変わるのだ。時間とともに、最初は落ち着かない気持ちにさせられていたものが、第二の天性になる。ただし、十分な時間をかけ、自分から進んでその居心地の悪さを引き受けるようにしなければ、居心地の悪さは消え — location: [2938](kindle://book?action=open&asin=B01GDS0994&location=2938) ^ref-29871

---
私はキャリアのなかで9000本以上のシュートを外してきた。300試合ほども負けてきた。ウィニングショットを放ってくれると信頼されて外したことが26回ある。私は人生のなかで繰り返し繰り返し失敗してきている。私が成功したのはそのためだ。 ─マイケル・ジョーダン — location: [2974](kindle://book?action=open&asin=B01GDS0994&location=2974) ^ref-34421

---
批判されることは覚悟して、しかし批判を恐れないようにしよう。あなたが言っていることをいいと思わない人、あなたに同意できない人はいるだろう。だから何だ？　それがインターネットであり、誰もがそれぞれの意見を言う資格がある。だから批判のために黙らされないようにしよう。また、少し非難されることに慣れるのもいい。あなたのもっとも完璧な仕事でも、批判する人は必ず出てくる。全員を喜ばせることはできない。 — location: [2986](kindle://book?action=open&asin=B01GDS0994&location=2986) ^ref-3971

---
ソフトウェア開発者が身に付けられるスキルのなかでもっとも重要なもののひとつは、独学のスキルだ。毎日のように新しいテクノロジーが登場し、初心者レベルのウェブ開発者の応募資格が少なくとも三つのプログラミング言語を知っていることだというような世界では、自学自習はぜひとも必要なスキルである。 — location: [3027](kindle://book?action=open&asin=B01GDS0994&location=3027) ^ref-55316

---
何かを学びたいと思うなら、どうすればいいのだろうか。結論を言えば、行動を起こしたときにもっともよく学べる。そして、学んだことを誰かほかの人に教えると、知識が補強され、理解が深まる。独学するときに重点を置くべきことは、できる限り早く実際に試せるポイントに到達して、行動を起こすことだ。 — location: [3057](kindle://book?action=open&asin=B01GDS0994&location=3057) ^ref-41662

---
遊ぶことが学習のための強力なメカニズムだということは決して意外ではないはずだ。動物の王国でもこのメカニズムを観察できる。動物の赤ん坊は非常によく遊ぶ。そして、その遊びを通じて、生き残りに必要な、重要なスキルを身に付けていく。赤ん坊の猫がネズミ狩りを学ぶところを見たことがあるだろうか。私たち人間も、遊ぶことによって、自分が何をしているのかよくわからない状態で積極的に行動することによって学ぶのである。 — location: [3065](kindle://book?action=open&asin=B01GDS0994&location=3065) ^ref-51429

---
カードの名前を言われれば、そのカードが何をするもので、どのような属性かということを正確に返答できた（おそらく、今でもほとんどのカードについてはその情報を言えると思う）。私が座って数千ものカードを記憶しようとしたと思うだろうか。いや、そんな必要はなかった。私はゲームをプレーして楽しんでいた。自然な探究心と好奇心のおかげで、ほとんど何の労力もかけずにこれだけの情報を身に付けられたのだ。 — location: [3072](kindle://book?action=open&asin=B01GDS0994&location=3072) ^ref-20063

---
このように遊ぶ能力を引き出せるというのは、非常に強力な道具であり、モチベーションが上がるだけではなく、学習ペースが非常に加速される。あるテーマについて、本をじっくり読む前に、ざっと流し読みしてその世界に飛び込み、すぐに遊んでみよう。何をしているのかわからなくても気にしなくていい。ただ楽しもう。そして、実験し、探りを入れているうちにどのような疑問が頭に浮かんでくるかを観察するのだ。 — location: [3076](kindle://book?action=open&asin=B01GDS0994&location=3076) ^ref-41901

---
最後に、自分が学んだことを誰かほかの人に教えて知識をセメントで封印しておこう。この頃には、自分が発見したことに興奮し、知識ははち切れんばかりになっており、新しく見つけた知識を聞いてくれる人に教えたくてうずうずしているはずだ。これが遊びのパワーだ。教えるというのは、わかったことを夫や妻に話したり、ブログポストを書いたりといった簡単なことでいい。大切なのは、その情報を自分の言葉で言い直し、頭の外のどこかに思考を組織することである。 — location: [3087](kindle://book?action=open&asin=B01GDS0994&location=3087) ^ref-11804

---
根本的な指導原理は、遊び、実験、学んだことを他人に教えることによって、学習するという考え方である。この単純なプロセスは、私たち全員にとって自然なものだが、私たちの外から「教えられる」プロセスでもある。いずれにしても、これこそもっとも単純でもっとも純粋な学習方法だ。 — location: [3094](kindle://book?action=open&asin=B01GDS0994&location=3094) ^ref-25141

---
あるテーマについての1冊の本を読むのではなく、多くの異なる参考資料を集めて学習に役立てよう。参考資料は、本以外の様々な形を取り得る。実際、今日では、インターネットが普及し、そこには多彩なコンテンツがあるので、学びたいと思うほぼあらゆるテーマについて多数の参考資料が見つかるだろう。 — location: [3254](kindle://book?action=open&asin=B01GDS0994&location=3254) ^ref-12655

---
口で言われても忘れる。教えてもらえば覚える。巻き込まれれば身に付く。 ─ベンジャミン・フランクリン — location: [3382](kindle://book?action=open&asin=B01GDS0994&location=3382) ^ref-40532

---
メンターがいるということは、ソフトウェア開発者としてのキャリアにおいてきわめて大きな財産になり得る。優れたメンターは、経験から得られた知恵をあなたに分け与えることができる。そのような知恵は、メンターがいなければ厳しい試練をくぐり抜けない限り得られないものだ。メンターはすでにあなたが通るべき道に印を付けている。そのような人の成功、失敗の経験から多くを学べるのだ。優れたメンターは、あなたがテクノロジーを自学自習するよりもずっと早くテクノロジーを学べるように手を差し伸べることができる。 — location: [3427](kindle://book?action=open&asin=B01GDS0994&location=3427) ^ref-24043

---
メンターがいるのはすばらしいことだが、メンターになることの方がいい場合がある。ソフトウェア開発者としてのキャリアがどの程度であっても、あなたの知恵やアドバイスに助けられる人がいる可能性はある。 — location: [3530](kindle://book?action=open&asin=B01GDS0994&location=3530) ^ref-34967

---
本当に学びたいという気持ちを持ち、そのためには真剣にがんばるつもりになっている人間を探そう。面倒だから、必要な労力を割くのがいやだからあなたに助けを求めているわけではなく、成長を加速させるために、経験があれば簡単に避けられるような過ちを防ぐためにあなたの助けを望む人間を選ぶようにしよ — location: [3593](kindle://book?action=open&asin=B01GDS0994&location=3593) ^ref-6111

---
学位や経験を持っているかどうかにかかわらず、仕事のポートフォリオを持つことを強くお勧めする。学位も経験もない場合は、自分が書いたコードを見せられるといい。今日、コードを見せるための最良の方法は、GitHub（http://github.com）などのサイトにホスティングされたオープンソースプロジェクトに力を貸す（または始める）ことだ。GitHubは、多くのオープンソースプロジェクトをホスティングしているサービスである。あなたのGitHubアカウントやあなたがプロジェクトに提供したコードは、他人が見られるようになっている。 　作ったウェブサイトやアプリケーションをまとめ、面接にソースコードを持っていくというのもひとつの方法だ。私がいつも開発者、特に仕事を始めて間がない人たちに勧めているのは、Android、iOSなどのモバイルアプリを作ることである。これは、アプリケーション全体を構築し、デプロイするために必要な能力を持っていることを雇い主になるかもしれない人々に示すいい方法だ。 — location: [3756](kindle://book?action=open&asin=B01GDS0994&location=3756) ^ref-18014

---
自分がわかっていないこと、はっきりしないことに気づくよういつも注意するのも、知識の隙間を見つけるためのテクニックのひとつだ。調べなければならない事項やはっきりわからない事項のリストを作り、同じテーマが何回出てくるかをチェックする。リストがどんどん大きくなるのに驚くだろう。しかし、自分に正直にならなければならない。わからないものが出てきたとき、すぐに学ぶ必要はないが、少なくともリストにその事項を追加して知識に隙間があるのをはっきりさせておくことはできるだろう。 — location: [3827](kindle://book?action=open&asin=B01GDS0994&location=3827) ^ref-30798

---
私は日中、できる限り割り込みを避けるよう努めている。なぜなら、割り込みこそが生産性を落とす最大の敵であることがわかっているからだ。私は自宅のホームオフィスで働いているので、キュービクル環境と比べればまだましだが、それでも割り込みを避けるのは難しい。私の電話は鳴るように設定されていない。日中は常にサイレントだ。妻と娘は、私がポモドーロに従って仕事をしている間は邪魔にならないようにしてくれる。私の注意を引かなければならないときには、メールを送るか、ドアから顔を覗かせる。その場合、私は休憩時間になったら二人の前に顔を出す。もちろん、緊急時は話が別だ。 — location: [4045](kindle://book?action=open&asin=B01GDS0994&location=4045) ^ref-18069

---
テレビを見るのがなぜ時間の浪費なのかを説明する必要はないだろう。しかし、テレビを完全に止める、あるいは少なくともテレビを見る時間を減らすためには、もう少しそう決心するだけの理由がほしいだろう。 — location: [4603](kindle://book?action=open&asin=B01GDS0994&location=4603) ^ref-27100

---
「技術者は技術さえあれば」というのはよく聞く言葉ではあります。技術に対して強い関心を持つ技術者としては、あまり関心のないことに邪魔されずに好きなことに集中したいという気持ちは当然のことでしょう。私自身も技術者の端くれと自認していますから、その気持ちはよくわかります。たとえ技術者でなくても、「好きなこと」のある人は、邪魔されずそれに集中したいという気持ちは大なり小なりあることでしょう。YouTubeのCMで「好きなことで、生きていく」というのもありましたね。 — location: [8396](kindle://book?action=open&asin=B01GDS0994&location=8396) ^ref-53682

---
